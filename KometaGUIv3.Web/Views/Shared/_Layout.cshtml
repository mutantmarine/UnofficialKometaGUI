<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Kometa GUI v3</title>
    <link rel="stylesheet" href="~/css/dark-theme.css" />
    <link rel="icon" type="image/x-icon" href="/favicon.ico">
</head>
<body>
    <nav class="navigation">
        <div class="nav-content">
            <a href="@Url.Action("Welcome", "Home")" class="nav-title">
                Kometa GUI v3
            </a>
            <ul class="nav-links">
                <li><a href="@Url.Action("Welcome", "Home")" class="@(ViewContext.RouteData.Values["action"]?.ToString() == "Welcome" ? "active" : "")">Welcome</a></li>
                <li><a href="@Url.Action("ProfileManagement", "Home")" class="@(ViewContext.RouteData.Values["action"]?.ToString() == "ProfileManagement" ? "active" : "")">Profiles</a></li>
                <li><a href="@Url.Action("Connections", "Home", new { profileName = ViewBag.ProfileName })" class="@(ViewContext.RouteData.Values["action"]?.ToString() == "Connections" ? "active" : "")">Connections</a></li>
                <li><a href="@Url.Action("Charts", "Home")" class="@(ViewContext.RouteData.Values["action"]?.ToString() == "Charts" ? "active" : "")">Charts</a></li>
                <li><a href="@Url.Action("Overlays", "Home")" class="@(ViewContext.RouteData.Values["action"]?.ToString() == "Overlays" ? "active" : "")">Overlays</a></li>
                <li><a href="@Url.Action("Services", "Home")" class="@(ViewContext.RouteData.Values["action"]?.ToString() == "Services" ? "active" : "")">Services</a></li>
                <li><a href="@Url.Action("Settings", "Home")" class="@(ViewContext.RouteData.Values["action"]?.ToString() == "Settings" ? "active" : "")">Settings</a></li>
                <li><a href="@Url.Action("Actions", "Home")" class="@(ViewContext.RouteData.Values["action"]?.ToString() == "Actions" ? "active" : "")">Actions</a></li>
            </ul>
        </div>
    </nav>

    <div class="container">
        @if (TempData["Success"] != null)
        {
            <div class="alert alert-success">
                @TempData["Success"]
            </div>
        }

        @if (TempData["Error"] != null)
        {
            <div class="alert alert-danger">
                @TempData["Error"]
            </div>
        }

        @if (TempData["Warning"] != null)
        {
            <div class="alert alert-warning">
                @TempData["Warning"]
            </div>
        }

        <main>
            @RenderBody()
        </main>
    </div>

    <!-- SignalR -->
    <script src="https://unpkg.com/@@microsoft/signalr@@8.0.0/dist/browser/signalr.js"></script>
    <script>
        // Global SignalR connection
        window.connection = null;
        
        document.addEventListener('DOMContentLoaded', async function() {
            try {
                // Initialize SignalR connection
                window.connection = new signalR.HubConnectionBuilder()
                    .withUrl("/synchub")
                    .withAutomaticReconnect()
                    .build();

                // Set up connection event handlers
                window.connection.onclose(error => {
                    console.log('SignalR connection closed:', error);
                });

                window.connection.onreconnecting(error => {
                    console.log('SignalR reconnecting:', error);
                });

                window.connection.onreconnected(connectionId => {
                    console.log('SignalR reconnected:', connectionId);
                });

                // Start the connection
                await window.connection.start();
                console.log('SignalR connected successfully');
            } catch (err) {
                console.error('SignalR connection failed:', err);
            }
        });
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>